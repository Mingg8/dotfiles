echo "`printf '\033[01;32m'`Hello `printf '\033[01;34m'`$USER`printf '\033[00m'`"
echo "My IP address is `printf '\033[01;31m'`$(hostname -I)`printf '\033[m'`"

export EDITOR=vim
export VISUAL=vim

# Enable Ctrl-x-e to edit command line
autoload edit-command-line
zle -N edit-command-line
bindkey "^x^e" edit-command-line

#export NPM_CONFIG_PREFIX=~/.npm-global

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export ANDROID_HOME=/home/romain/Android/Sdk
export ANDROID_SDK=/home/romain/Android/Sdk
export ANDROID_NDK=/home/romain/Android/Ndk
export PATH=${PATH}:${ANDROID_HOME}/tools
export PATH=${PATH}:${ANDROID_HOME}/platform-tools

#echo -e "CPU temp: \c" && {/opt/vc/bin/vcgencmd measure_temp | cut -d = -f 2}

. /usr/share/autojump/autojump.sh

export PS1="\$(date +%k:%M:%S) $PS1"

# http://stackoverflow.com/questions/19327836/why-am-i-seeing-only-8-colors-in-terminal-xfce-terminal
if [[ "$COLORTERM" == "xfce4-terminal" ]] ; then
    export TERM=xterm-256color
fi

export PATH=$PATH:/home/romain/git/dotfiles/scripts:/home/romain/.cabal/bin:/home/romain/android-studio/bin/:/home/romain/.npm-global/bin

export PATH=$PATH:/usr/local/go/bin

#Â TODO add node_modules/.bin to PATH by default, and modify cd() to do PATH=$PATH:$(npm bin) if [ -f package.json ] # TODO in .aliases
# Adds node_modules/.bin to the PATH
npm_chpwd_hook() {
    if [ -n "${PRENPMPATH+x}" ]; then
        PATH=$PRENPMPATH
        unset PRENPMPATH
    fi
    if [ -f package.json ]; then
        PRENPMPATH=$PATH
        PATH=$(npm bin):$PATH
    fi
}

autoload -Uz add-zsh-hook
add-zsh-hook preexec npm_chpwd_hook

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# place this after nvm initialization!
load-nvmrc() {
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    nvm use
  elif [[ $(nvm version) != $(nvm version default)  ]]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# If no file .nvmrc, look for latest node version available, download it and set it as default
if [[ ! -f .nvmrc && ! -f /tmp/.nvmrc ]]; then
    NODE_LATEST_VERSION=$(curl --max-time 3 -s 'https://nodejs.org/dist/latest/' | grep -Po 'node-v([0-9]+\.[0-9]+\.[0-9]+)' | head -n 1 | cut -c 6-)
    echo "Latest version of NodeJS is $NODE_LATEST_VERSION"
    # Install latest NodeJS if need be
    if [ "$(node --version)" != "$NODE_LATEST_VERSION" ] && [ "$NODE_LATEST_VERSION" != "" ]; then
        echo 'Installing the latest version...'
        nvm install node
        #nvm use node # Done automatically
        nvm alias default node
    fi
    touch /tmp/.nvmrc
fi
